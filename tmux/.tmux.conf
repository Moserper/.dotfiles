unbind C-b
set -g prefix `

bind-key ` last-window
bind-key e send-prefix

# set-option -gw xterm-keys on
set -g default-terminal "screen-256color"
set -s escape-time 0

# if you're running tmux within iTerm2
#   - and tmux is 1.9 or 1.9a
#   - and iTerm2 is configured to let option key act as +Esc
#   - and iTerm2 is configured to send [1;9A -> [1;9D for option + arrow keys
# then uncomment the following line to make Meta + arrow keys mapping work
set -ga terminal-overrides "*:kUP3=\e[1;9A,*:kDN3=\e[1;9B,*:kRIT3=\e[1;9C,*:kLFT3=\e[1;9D"

set -g base-index 1
set -g status-position bottom
set -g status-fg colour137
set -g status-bg '#333333'
set -wg mode-style bg='#8B8B8B'
# set -g status-bg '#4d3f83'
set -g status-left '#[fg=colour42,bold] [#{session_name}] '
set -g status-right '#[fg=colour15, bg=colour141,bold] %d/%m/%y #[fg=colour15,bg=colour69] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

set -g mouse on
setw -g mode-keys vi
setw -g window-status-current-style bg='#1E1E1E'

setw -g window-status-current-format ' #[fg=colour137,bold]#I:#[fg=colour15,bold]#W#[fg=colour15,bold]#F '
setw -g window-status-format ' #[fg=colour250,bold]#I:#[fg=colour250,bold]#W#[fg=colour250,bold]#F '
set-option -g history-limit 5000

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

bind-key v split-window -h
bind-key s split-window -v

bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5


bind-key -r C-[ swap-window -t -1\; select-window -t -1
bind-key -r C-] swap-window -t +1\; select-window -t +1

bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# set-window-option -g window-status-current-format '#[fg=colour15,bold]** #{window_index} #[fg=colour42]#{pane_current_command} #[fg=colour209]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=colour15]**|'
# set-window-option -g window-status-format '#[fg=colour250,bold]#{window_index} #[fg=colour250,bold]#{pane_current_command} #[fg=colour250,bold]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=colour250,bold]|'

# bind-key -n DoubleClick1Pane \
#    select-pane \; \
#    copy-mode -M \; \
#    send-keys -X select-word \; \
#    run-shell "sleep .5s" \; \
#    send-keys -X copy-selection-and-cancel\; run "tmux save-buffer - | pbcopy"
#
# bind-key -T copy-mode-vi MouseDragEnd1Pane \
#    send-keys -X copy-pipe "xclip -in -f | xclip -in -sel" \; \
#    run-shell "sleep .5s" \; \
#    send-keys -X copy-selection-and-cancel\; run "tmux save-buffer - | pbcopy"

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-text \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-text \"%%%\""

bind-key -r f run-shell "tmux neww ~/.local/scripts/tmux-sessionizer"
bind-key -r t run-shell "~/.local/scripts/tmux-sessionizer ~/Desktop/dev"

unbind-key MouseDown2Pane
unbind-key MouseDragEnd1Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel primary)\"; tmux paste-buffer"
bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -sel primary -i"
set -g set-clipboard external
